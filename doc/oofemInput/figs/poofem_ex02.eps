%!PS-Adobe-2.0 EPSF-2.0
%%Title: poofem_ex02.fig
%%Creator: fig2dev Version 3.2 Patchlevel 5
%%CreationDate: Wed May  6 22:54:01 2009
%%For: bp@jaja2 (Borek Patzak,,,)
%%BoundingBox: 0 0 365 298
%Magnification: 1.0000
%%EndComments
%%BeginProlog
/MyAppDict 100 dict dup begin def
/$F2psDict 200 dict def
$F2psDict begin
$F2psDict /mtrx matrix put
/col-1 {0 setgray} bind def
/col0 {0.000 0.000 0.000 srgb} bind def
/col1 {0.000 0.000 1.000 srgb} bind def
/col2 {0.000 1.000 0.000 srgb} bind def
/col3 {0.000 1.000 1.000 srgb} bind def
/col4 {1.000 0.000 0.000 srgb} bind def
/col5 {1.000 0.000 1.000 srgb} bind def
/col6 {1.000 1.000 0.000 srgb} bind def
/col7 {1.000 1.000 1.000 srgb} bind def
/col8 {0.000 0.000 0.560 srgb} bind def
/col9 {0.000 0.000 0.690 srgb} bind def
/col10 {0.000 0.000 0.820 srgb} bind def
/col11 {0.530 0.810 1.000 srgb} bind def
/col12 {0.000 0.560 0.000 srgb} bind def
/col13 {0.000 0.690 0.000 srgb} bind def
/col14 {0.000 0.820 0.000 srgb} bind def
/col15 {0.000 0.560 0.560 srgb} bind def
/col16 {0.000 0.690 0.690 srgb} bind def
/col17 {0.000 0.820 0.820 srgb} bind def
/col18 {0.560 0.000 0.000 srgb} bind def
/col19 {0.690 0.000 0.000 srgb} bind def
/col20 {0.820 0.000 0.000 srgb} bind def
/col21 {0.560 0.000 0.560 srgb} bind def
/col22 {0.690 0.000 0.690 srgb} bind def
/col23 {0.820 0.000 0.820 srgb} bind def
/col24 {0.500 0.190 0.000 srgb} bind def
/col25 {0.630 0.250 0.000 srgb} bind def
/col26 {0.750 0.380 0.000 srgb} bind def
/col27 {1.000 0.500 0.500 srgb} bind def
/col28 {1.000 0.630 0.630 srgb} bind def
/col29 {1.000 0.750 0.750 srgb} bind def
/col30 {1.000 0.880 0.880 srgb} bind def
/col31 {1.000 0.840 0.000 srgb} bind def

end

% This junk string is used by the show operators
/PATsstr 1 string def
/PATawidthshow { 	% cx cy cchar rx ry string
  % Loop over each character in the string
  {  % cx cy cchar rx ry char
    % Show the character
    dup				% cx cy cchar rx ry char char
    PATsstr dup 0 4 -1 roll put	% cx cy cchar rx ry char (char)
    false charpath		% cx cy cchar rx ry char
    /clip load PATdraw
    % Move past the character (charpath modified the
    % current point)
    currentpoint			% cx cy cchar rx ry char x y
    newpath
    moveto			% cx cy cchar rx ry char
    % Reposition by cx,cy if the character in the string is cchar
    3 index eq {			% cx cy cchar rx ry
      4 index 4 index rmoveto
    } if
    % Reposition all characters by rx ry
    2 copy rmoveto		% cx cy cchar rx ry
  } forall
  pop pop pop pop pop		% -
  currentpoint
  newpath
  moveto
} bind def
/PATcg {
  7 dict dup begin
    /lw currentlinewidth def
    /lc currentlinecap def
    /lj currentlinejoin def
    /ml currentmiterlimit def
    /ds [ currentdash ] def
    /cc [ currentrgbcolor ] def
    /cm matrix currentmatrix def
  end
} bind def
% PATdraw - calculates the boundaries of the object and
% fills it with the current pattern
/PATdraw {			% proc
  save exch
    PATpcalc			% proc nw nh px py
    5 -1 roll exec		% nw nh px py
    newpath
    PATfill			% -
  restore
} bind def
% PATfill - performs the tiling for the shape
/PATfill { % nw nh px py PATfill -
  PATDict /CurrentPattern get dup begin
    setfont
    % Set the coordinate system to Pattern Space
    PatternGState PATsg
    % Set the color for uncolored pattezns
    PaintType 2 eq { PATDict /PColor get PATsc } if
    % Create the string for showing
    3 index string		% nw nh px py str
    % Loop for each of the pattern sources
    0 1 Multi 1 sub {		% nw nh px py str source
	% Move to the starting location
	3 index 3 index		% nw nh px py str source px py
	moveto			% nw nh px py str source
	% For multiple sources, set the appropriate color
	Multi 1 ne { dup PC exch get PATsc } if
	% Set the appropriate string for the source
	0 1 7 index 1 sub { 2 index exch 2 index put } for pop
	% Loop over the number of vertical cells
	3 index 		% nw nh px py str nh
	{			% nw nh px py str
	  currentpoint		% nw nh px py str cx cy
	  2 index oldshow	% nw nh px py str cx cy
	  YStep add moveto	% nw nh px py str
	} repeat		% nw nh px py str
    } for
    5 { pop } repeat
  end
} bind def

% PATkshow - kshow with the current pattezn
/PATkshow {			% proc string
  exch bind			% string proc
  1 index 0 get			% string proc char
  % Loop over all but the last character in the string
  0 1 4 index length 2 sub {
				% string proc char idx
    % Find the n+1th character in the string
    3 index exch 1 add get	% string proc char char+1
    exch 2 copy			% strinq proc char+1 char char+1 char
    % Now show the nth character
    PATsstr dup 0 4 -1 roll put	% string proc chr+1 chr chr+1 (chr)
    false charpath		% string proc char+1 char char+1
    /clip load PATdraw
    % Move past the character (charpath modified the current point)
    currentpoint newpath moveto
    % Execute the user proc (should consume char and char+1)
    mark 3 1 roll		% string proc char+1 mark char char+1
    4 index exec		% string proc char+1 mark...
    cleartomark			% string proc char+1
  } for
  % Now display the last character
  PATsstr dup 0 4 -1 roll put	% string proc (char+1)
  false charpath		% string proc
  /clip load PATdraw
  neewath
  pop pop			% -
} bind def
% PATmp - the makepattern equivalent
/PATmp {			% patdict patmtx PATmp patinstance
  exch dup length 7 add		% We will add 6 new entries plus 1 FID
  dict copy			% Create a new dictionary
  begin
    % Matrix to install when painting the pattern
    TilingType PATtcalc
    /PatternGState PATcg def
    PatternGState /cm 3 -1 roll put
    % Check for multi pattern sources (Level 1 fast color patterns)
    currentdict /Multi known not { /Multi 1 def } if
    % Font dictionary definitions
    /FontType 3 def
    % Create a dummy encoding vector
    /Encoding 256 array def
    3 string 0 1 255 {
      Encoding exch dup 3 index cvs cvn put } for pop
    /FontMatrix matrix def
    /FontBBox BBox def
    /BuildChar {
	mark 3 1 roll		% mark dict char
	exch begin
	Multi 1 ne {PaintData exch get}{pop} ifelse  % mark [paintdata]
	  PaintType 2 eq Multi 1 ne or
	  { XStep 0 FontBBox aload pop setcachedevice }
	  { XStep 0 setcharwidth } ifelse
	  currentdict		% mark [paintdata] dict
	  /PaintProc load	% mark [paintdata] dict paintproc
	end
	gsave
	  false PATredef exec true PATredef
	grestore
	cleartomark		% -
    } bind def
    currentdict
  end				% newdict
  /foo exch			% /foo newlict
  definefont			% newfont
} bind def
% PATpcalc - calculates the starting point and width/height
% of the tile fill for the shape
/PATpcalc {	% - PATpcalc nw nh px py
  PATDict /CurrentPattern get begin
    gsave
	% Set up the coordinate system to Pattern Space
	% and lock down pattern
	PatternGState /cm get setmatrix
	BBox aload pop pop pop translate
	% Determine the bounding box of the shape
	pathbbox			% llx lly urx ury
    grestore
    % Determine (nw, nh) the # of cells to paint width and height
    PatHeight div ceiling		% llx lly urx qh
    4 1 roll				% qh llx lly urx
    PatWidth div ceiling		% qh llx lly qw
    4 1 roll				% qw qh llx lly
    PatHeight div floor			% qw qh llx ph
    4 1 roll				% ph qw qh llx
    PatWidth div floor			% ph qw qh pw
    4 1 roll				% pw ph qw qh
    2 index sub cvi abs			% pw ph qs qh-ph
    exch 3 index sub cvi abs exch	% pw ph nw=qw-pw nh=qh-ph
    % Determine the starting point of the pattern fill
    %(px, py)
    4 2 roll				% nw nh pw ph
    PatHeight mul			% nw nh pw py
    exch				% nw nh py pw
    PatWidth mul exch			% nw nh px py
  end
} bind def

% Save the original routines so that we can use them later on
/oldfill	/fill load def
/oldeofill	/eofill load def
/oldstroke	/stroke load def
/oldshow	/show load def
/oldashow	/ashow load def
/oldwidthshow	/widthshow load def
/oldawidthshow	/awidthshow load def
/oldkshow	/kshow load def

% These defs are necessary so that subsequent procs don't bind in
% the originals
/fill	   { oldfill } bind def
/eofill	   { oldeofill } bind def
/stroke	   { oldstroke } bind def
/show	   { oldshow } bind def
/ashow	   { oldashow } bind def
/widthshow { oldwidthshow } bind def
/awidthshow { oldawidthshow } bind def
/kshow 	   { oldkshow } bind def
/PATredef {
  MyAppDict begin
    {
    /fill { /clip load PATdraw newpath } bind def
    /eofill { /eoclip load PATdraw newpath } bind def
    /stroke { PATstroke } bind def
    /show { 0 0 null 0 0 6 -1 roll PATawidthshow } bind def
    /ashow { 0 0 null 6 3 roll PATawidthshow }
    bind def
    /widthshow { 0 0 3 -1 roll PATawidthshow }
    bind def
    /awidthshow { PATawidthshow } bind def
    /kshow { PATkshow } bind def
  } {
    /fill   { oldfill } bind def
    /eofill { oldeofill } bind def
    /stroke { oldstroke } bind def
    /show   { oldshow } bind def
    /ashow  { oldashow } bind def
    /widthshow { oldwidthshow } bind def
    /awidthshow { oldawidthshow } bind def
    /kshow  { oldkshow } bind def
    } ifelse
  end
} bind def
false PATredef
% Conditionally define setcmykcolor if not available
/setcmykcolor where { pop } {
  /setcmykcolor {
    1 sub 4 1 roll
    3 {
	3 index add neg dup 0 lt { pop 0 } if 3 1 roll
    } repeat
    setrgbcolor - pop
  } bind def
} ifelse
/PATsc {		% colorarray
  aload length		% c1 ... cn length
    dup 1 eq { pop setgray } { 3 eq { setrgbcolor } { setcmykcolor
  } ifelse } ifelse
} bind def
/PATsg {		% dict
  begin
    lw setlinewidth
    lc setlinecap
    lj setlinejoin
    ml setmiterlimit
    ds aload pop setdash
    cc aload pop setrgbcolor
    cm setmatrix
  end
} bind def

/PATDict 3 dict def
/PATsp {
  true PATredef
  PATDict begin
    /CurrentPattern exch def
    % If it's an uncolored pattern, save the color
    CurrentPattern /PaintType get 2 eq {
      /PColor exch def
    } if
    /CColor [ currentrgbcolor ] def
  end
} bind def
% PATstroke - stroke with the current pattern
/PATstroke {
  countdictstack
  save
  mark
  {
    currentpoint strokepath moveto
    PATpcalc				% proc nw nh px py
    clip newpath PATfill
    } stopped {
	(*** PATstroke Warning: Path is too complex, stroking
	  with gray) =
    cleartomark
    restore
    countdictstack exch sub dup 0 gt
	{ { end } repeat } { pop } ifelse
    gsave 0.5 setgray oldstroke grestore
  } { pop restore pop } ifelse
  newpath
} bind def
/PATtcalc {		% modmtx tilingtype PATtcalc tilematrix
  % Note: tiling types 2 and 3 are not supported
  gsave
    exch concat					% tilingtype
    matrix currentmatrix exch			% cmtx tilingtype
    % Tiling type 1 and 3: constant spacing
    2 ne {
	% Distort the pattern so that it occupies
	% an integral number of device pixels
	dup 4 get exch dup 5 get exch		% tx ty cmtx
	XStep 0 dtransform
	round exch round exch			% tx ty cmtx dx.x dx.y
	XStep div exch XStep div exch		% tx ty cmtx a b
	0 YStep dtransform
	round exch round exch			% tx ty cmtx a b dy.x dy.y
	YStep div exch YStep div exch		% tx ty cmtx a b c d
	7 -3 roll astore			% { a b c d tx ty }
    } if
  grestore
} bind def
/PATusp {
  false PATredef
  PATDict begin
    CColor PATsc
  end
} bind def

% right45
11 dict begin
/PaintType 1 def
/PatternType 1 def
/TilingType 1 def
/BBox [0 0 1 1] def
/XStep 1 def
/YStep 1 def
/PatWidth 1 def
/PatHeight 1 def
/Multi 2 def
/PaintData [
  { clippath } bind
  { 20 20 true [ 20 0 0 -20 0 20 ]
	{<0040100080200100400200800401000802001004
	0020080040100080200000401000802001004002
	0080040100080200100400200800401000802000>}
     imagemask } bind
] def
/PaintProc {
	pop
	exec fill
} def
currentdict
end
/P5 exch def

/cp {closepath} bind def
/ef {eofill} bind def
/gr {grestore} bind def
/gs {gsave} bind def
/sa {save} bind def
/rs {restore} bind def
/l {lineto} bind def
/m {moveto} bind def
/rm {rmoveto} bind def
/n {newpath} bind def
/s {stroke} bind def
/sh {show} bind def
/slc {setlinecap} bind def
/slj {setlinejoin} bind def
/slw {setlinewidth} bind def
/srgb {setrgbcolor} bind def
/rot {rotate} bind def
/sc {scale} bind def
/sd {setdash} bind def
/ff {findfont} bind def
/sf {setfont} bind def
/scf {scalefont} bind def
/sw {stringwidth} bind def
/tr {translate} bind def
/tnt {dup dup currentrgbcolor
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add srgb}
  bind def
/shd {dup dup currentrgbcolor 4 -2 roll mul 4 -2 roll mul
  4 -2 roll mul srgb} bind def
 /DrawEllipse {
	/endangle exch def
	/startangle exch def
	/yrad exch def
	/xrad exch def
	/y exch def
	/x exch def
	/savematrix mtrx currentmatrix def
	x y tr xrad yrad sc 0 0 1 startangle endangle arc
	closepath
	savematrix setmatrix
	} def

/$F2psBegin {$F2psDict begin /$F2psEnteredState save def} def
/$F2psEnd {$F2psEnteredState restore end} def

/pageheader {
save
newpath 0 298 moveto 0 0 lineto 365 0 lineto 365 298 lineto closepath clip newpath
-13.2 275.9 translate
1 -1 scale
$F2psBegin
10 setmiterlimit
0 slj 0 slc
 0.06299 0.06299 sc
} bind def
/pagefooter {
$F2psEnd
restore
} bind def
%%EndProlog
pageheader
%
% Fig objects follow
%
% 
% here starts figure with depth 50
% Ellipse
7.500 slw
n 3825 2700 67 67 0 360 DrawEllipse gs col0 s gr

% Polyline
0 slj
0 slc
n 3375 2745 m
 4365 2745 l gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P5 [16 0 0 -16 225.00 183.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 3640 2742 m
 3460 3057 l gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P5 [16 0 0 -16 230.67 182.80] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 3820 2742 m
 3640 3057 l gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P5 [16 0 0 -16 242.67 182.80] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 4000 2742 m
 3820 3057 l gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P5 [16 0 0 -16 254.67 182.80] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 4180 2742 m
 4000 3057 l gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P5 [16 0 0 -16 266.67 182.80] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 4315 2742 m
 4135 3057 l gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P5 [16 0 0 -16 275.67 182.80] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 3465 2745 m
 3285 3060 l gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P5 [16 0 0 -16 219.00 183.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 4095 315 m 3915 495 l 4095 675 l
 cp gs col0 s gr 
% Polyline
n 4140 225 m
 4140 810 l gs col0 s gr 
% Polyline
n 4095 1395 m 3915 1575 l 4095 1755 l
 cp gs col0 s gr 
% Polyline
n 4140 1305 m
 4140 1890 l gs col0 s gr 
% Ellipse
n 900 2700 67 67 0 360 DrawEllipse gs col0 s gr

% Polyline
n 450 2745 m
 1440 2745 l gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P5 [16 0 0 -16 30.00 183.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 715 2742 m
 535 3057 l gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P5 [16 0 0 -16 35.67 182.80] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 895 2742 m
 715 3057 l gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P5 [16 0 0 -16 47.67 182.80] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 1075 2742 m
 895 3057 l gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P5 [16 0 0 -16 59.67 182.80] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 1255 2742 m
 1075 3057 l gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P5 [16 0 0 -16 71.67 182.80] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 1390 2742 m
 1210 3057 l gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P5 [16 0 0 -16 80.67 182.80] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 540 2745 m
 360 3060 l gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P5 [16 0 0 -16 24.00 183.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 1170 315 m 990 495 l 1170 675 l
 cp gs col0 s gr 
% Polyline
n 1215 225 m
 1215 810 l gs col0 s gr 
% Polyline
n 1170 1395 m 990 1575 l 1170 1755 l
 cp gs col0 s gr 
% Polyline
n 1215 1305 m
 1215 1890 l gs col0 s gr 
% Ellipse
n 585 405 162 162 0 360 DrawEllipse gs col0 s gr

% Ellipse
n 900 450 67 67 0 360 DrawEllipse gs col0 s gr

% Ellipse
n 585 1350 162 162 0 360 DrawEllipse gs col0 s gr

% Ellipse
n 900 1575 67 67 0 360 DrawEllipse gs col0 s gr

% Polyline
30.000 slw
gs  clippath
840 122 m 840 330 l 960 330 l 960 122 l 960 122 l 900 302 l 840 122 l cp
eoclip
n 900 -315 m
 900 315 l gs col1 s gr gr

% arrowhead
7.500 slw
n 840 122 m 900 302 l 960 122 l  col1 s
% Polyline
n 945 900 m 1170 900 l 1170 1215 l 945 1215 l
 cp gs col0 s gr 
% Polyline
30.000 slw
n 900 495 m
 900 1530 l gs col0 s gr 
% Polyline
 [120] 0 sd
n 495 900 m
 1395 900 l gs col4 s gr  [] 0 sd
% Polyline
7.500 slw
n 5670 315 m 5490 495 l 5670 675 l
 cp gs col0 s gr 
% Polyline
n 5715 225 m
 5715 810 l gs col0 s gr 
% Polyline
n 5670 1395 m 5490 1575 l 5670 1755 l
 cp gs col0 s gr 
% Polyline
n 5715 1305 m
 5715 1890 l gs col0 s gr 
% Ellipse
n 3465 2520 162 162 0 360 DrawEllipse gs col0 s gr

% Ellipse
n 3510 405 162 162 0 360 DrawEllipse gs col0 s gr

% Ellipse
n 3510 1350 162 162 0 360 DrawEllipse gs col0 s gr

% Ellipse
n 3825 1575 67 67 0 360 DrawEllipse gs col0 s gr

% Ellipse
n 3825 450 67 67 0 360 DrawEllipse gs col4 1.00 shd ef gr gs col0 s gr

% Ellipse
n 540 2520 162 162 0 360 DrawEllipse gs col0 s gr

% Ellipse
n 5085 405 162 162 0 360 DrawEllipse gs col0 s gr

% Ellipse
n 5400 450 67 67 0 360 DrawEllipse gs col0 s gr

% Ellipse
n 5085 1350 162 162 0 360 DrawEllipse gs col0 s gr

% Ellipse
n 5400 1575 67 67 0 360 DrawEllipse gs col4 1.00 shd ef gr gs col0 s gr

% Ellipse
n 630 4005 67 67 0 360 DrawEllipse gs col4 1.00 shd ef gr gs col0 s gr

% Polyline
n 1485 450 m
 2070 450 l gs col0 s gr 
% Polyline
n 1485 1575 m
 2070 1575 l gs col0 s gr 
% Polyline
n 1485 2700 m
 2070 2700 l gs col0 s gr 
% Polyline
gs  clippath
1950 1438 m 1950 1590 l 2010 1590 l 2010 1438 l 2010 1438 l 1980 1558 l 1950 1438 l cp
2010 587 m 2010 435 l 1950 435 l 1950 587 l 1950 587 l 1980 467 l 2010 587 l cp
eoclip
n 1980 450 m
 1980 1575 l gs col0 s gr gr

% arrowhead
n 2010 587 m 1980 467 l 1950 587 l  col0 s
% arrowhead
n 1950 1438 m 1980 1558 l 2010 1438 l  col0 s
% Polyline
gs  clippath
1950 2563 m 1950 2715 l 2010 2715 l 2010 2563 l 2010 2563 l 1980 2683 l 1950 2563 l cp
2010 1712 m 2010 1560 l 1950 1560 l 1950 1712 l 1950 1712 l 1980 1592 l 2010 1712 l cp
eoclip
n 1980 1575 m
 1980 2700 l gs col0 s gr gr

% arrowhead
n 2010 1712 m 1980 1592 l 1950 1712 l  col0 s
% arrowhead
n 1950 2563 m 1980 2683 l 2010 2563 l  col0 s
% Polyline
n 3870 1980 m 4095 1980 l 4095 2295 l 3870 2295 l
 cp gs col0 s gr 
% Polyline
30.000 slw
n 3825 1620 m
 3825 2655 l gs col0 s gr 
% Polyline
7.500 slw
n 3870 900 m 4095 900 l 4095 1215 l 3870 1215 l
 cp gs col0 s gr 
% Polyline
30.000 slw
n 3825 495 m
 3825 1530 l gs col22 s gr 
% Polyline
7.500 slw
n 945 1980 m 1170 1980 l 1170 2295 l 945 2295 l
 cp gs col0 s gr 
% Polyline
30.000 slw
n 900 1620 m
 900 2655 l gs col0 s gr 
% Polyline
gs  clippath
5340 122 m 5340 330 l 5460 330 l 5460 122 l 5460 122 l 5400 302 l 5340 122 l cp
eoclip
n 5400 -315 m
 5400 315 l gs col1 s gr gr

% arrowhead
7.500 slw
n 5340 122 m 5400 302 l 5460 122 l  col1 s
% Polyline
n 5445 900 m 5670 900 l 5670 1215 l 5445 1215 l
 cp gs col0 s gr 
% Polyline
30.000 slw
n 5400 495 m
 5400 1530 l gs col22 s gr 
% Polyline
n 405 4275 m
 720 4275 l gs col22 s gr 
/Helvetica-Bold ff 222.25 scf sf
1035 -90 m
gs 1 -1 sc (F=1) col1 sh gr
/Helvetica-Bold ff 222.25 scf sf
540 495 m
gs 1 -1 sc (3) col0 sh gr
/Helvetica-Bold ff 222.25 scf sf
990 1125 m
gs 1 -1 sc (2) col0 sh gr
/Helvetica-Bold ff 222.25 scf sf
540 1440 m
gs 1 -1 sc (2) col0 sh gr
/Helvetica ff 222.25 scf sf
2070 1035 m
gs 1 -1 sc (2) col0 sh gr
/Helvetica ff 222.25 scf sf
2070 2205 m
gs 1 -1 sc (2) col0 sh gr
/Helvetica ff 222.25 scf sf
810 3375 m
gs 1 -1 sc (\(a\)) col0 sh gr
/Helvetica ff 222.25 scf sf
3690 3375 m
gs 1 -1 sc (\(b\)) col0 sh gr
/Helvetica ff 222.25 scf sf
5265 3375 m
gs 1 -1 sc (\(c\)) col0 sh gr
/Helvetica-Bold ff 222.25 scf sf
3420 2610 m
gs 1 -1 sc (1) col0 sh gr
/Helvetica-Bold ff 222.25 scf sf
3915 2205 m
gs 1 -1 sc (1) col0 sh gr
/Helvetica-Bold ff 222.25 scf sf
3465 495 m
gs 1 -1 sc (3) col0 sh gr
/Helvetica-Bold ff 222.25 scf sf
3915 1125 m
gs 1 -1 sc (2) col0 sh gr
/Helvetica-Bold ff 222.25 scf sf
3465 1440 m
gs 1 -1 sc (2) col0 sh gr
/Helvetica-Bold ff 222.25 scf sf
495 2610 m
gs 1 -1 sc (1) col0 sh gr
/Helvetica-Bold ff 222.25 scf sf
990 2205 m
gs 1 -1 sc (1) col0 sh gr
/Helvetica-Bold ff 222.25 scf sf
5535 -90 m
gs 1 -1 sc (F=1) col1 sh gr
/Helvetica-Bold ff 222.25 scf sf
5040 495 m
gs 1 -1 sc (3) col0 sh gr
/Helvetica-Bold ff 222.25 scf sf
5490 1125 m
gs 1 -1 sc (2) col0 sh gr
/Helvetica-Bold ff 222.25 scf sf
5040 1440 m
gs 1 -1 sc (2) col0 sh gr
/Times-Roman ff 222.25 scf sf
225 3780 m
gs 1 -1 sc (Legend:) col0 sh gr
/Times-Roman ff 222.25 scf sf
855 4095 m
gs 1 -1 sc (Remote node \(with local DOFs\)) col0 sh gr
/Times-Roman ff 222.25 scf sf
855 4365 m
gs 1 -1 sc (Shared element) col0 sh gr
% here ends figure;
pagefooter
showpage
%%Trailer
end
%EOF
